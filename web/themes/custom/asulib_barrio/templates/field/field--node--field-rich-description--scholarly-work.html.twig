{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{{ attach_library('asulib_barrio/toggle-more') }}
{%
  set classes = [
  'field',
  'field--name-' ~ field_name|clean_class,
  'field--type-' ~ field_type|clean_class,
  'field--label-' ~ label_display,
]
%}
{%
  set title_classes = [
  'field__label',
  label_display == 'visually_hidden' ? 'visually-hidden',
]
%}

{% set id = random() %}

<div{{ attributes.addClass(classes, 'text-show-more field__item') }} id="{{ id }}">
	<div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
	{% for item in items %}
		{% set description = item.content|render|trim|split(' ') %}
		{% if description|length > 50 %}
			{% set teaser = description|slice(0, 40)|join(' ')|trim('</p>', 'right') ~ '<span id="more-ellipse" class="collapse multi-collapse show">&hellip;</span></p>' %}
			{#{% set remainder = description|slice(30)|join(' ') %}#}
      <div class="description-teaser collapse multi-collapse show">{{ teaser|raw }}</div>
      <div class="description-full multi-collapse collapse" id="full-content">{{ item.content }}</div>
      <button aria-expanded="false" aria-controls="full-content more-ellipse" type="button" data-bs-toggle="collapse" data-bs-target="#{{ id }} .multi-collapse" class="btn-link show-more">
        {% trans %}(more){% endtrans %}
      </button>
		{% else %}
      {{ item.content }}
		{% endif %}
	{% endfor %}
</div>

