{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not is_published ? 'node--unpublished',
  ]
%}

{%
    set model_icons = {
        "Image": "far fa-file-image",
        "Audio": "far fa-file-audio",
        "Video": "far fa-file-video",
        "Digital Document": "far fa-file-alt",
        "Binary": "far fa-file",
        "Complex Object": "complex-object-icon",
        "Paged Content": "complex-object-icon",
    }
%}
{% set mod = content.field_model[0]|render|trim %}
<div class="space-border-box">
    <article{{ attributes.addClass(classes) }}>
      <header>
        {% if drupal_view_result('display_media', 'thumbnail', node.id) is empty %}
          {% for k, v in model_icons|filter((v, k) => k == mod) %}
            <div class="icon-container">
              <i class="{{ v }} fa-6x"></i>
            </div>
          {% endfor %}
        {% else %}
          {{ drupal_view('display_media', 'thumbnail', node.id) }}
        {% endif %}
          {{ title_prefix }}
          {% if label %}
            <h5{{ title_attributes.addClass('node__title') }}>
              {% if not is_published %}<i class="fas fa-ban"></i>&nbsp;{% endif %}
              <a href="{{ url }}" rel="bookmark">{{ label }}</a>
            </h5>
          {% endif %}
          {{ title_suffix }}
        <br class="clearfloat">
        {% if drupal_view_result('media_of', 'page_1' ,node.id) is not empty %}
          <div>Download count:
            {{ drupal_block('asu_item_downloads', {'child_node_id': node.id}) }}
          </div>
          <br/>
          <div class="download-options">
            {{ drupal_block('downloads_block', {'child_node_id': node.id, 'origfile': original_file, 'servicefile': service_file}) }}
          </div>
          {% if mod == 'Image' or mod == 'Digital Document' %}
            <a href="/items/{{ node.id }}/view"{% if hreflang_attr %} hreflang="{{ hreflang_attr }}"{% endif %}>Preview</a><br/>
          {% elseif (mod == 'Audio' or mod == 'Video') and (of_access or sf_access) %}
            <a data-bs-toggle="collapse" href="#player{{ node.id }}" role="button" aria-expanded="false" aria-controls="player{{ node.id }}"><i class="far fa-play-circle"></i> Play</a><br/>
            <div id="player{{ node.id }}" class="collapse">
              <div class="mini-player">
                {% if drupal_view_result('video_media_evas', 'service_file', node.id) is empty and of_access %}
                  {{ drupal_view('video_media_evas', 'original_file', node.id) }}
                {% elseif sf_access %}
                  {{ drupal_view('video_media_evas', 'service_file', node.id) }}
                {% endif %}
              </div>
            </div>
          {% endif %}
        {% endif %}
        <div class="altmetrics-info">
          {{ drupal_block('asu_altmetrics', wrapper=false) }}
        </div>
        {% if node.field_handle[0].value %}
          <span class="copy_permalink_link" title="{{node.field_handle[0].value}}">Permanent Link</span> &nbsp;
            <span class="copy_permalink_link far fa-copy fa-lg" title="{{node.field_handle[0].value}}">&nbsp;</span>
        {% endif %}
        {% if co_child_fields %}
          {% for f in co_child_fields %}
            {% if f == "field_linked_agent" %}
              {% if node.fields[f] is not empty %}
                <div class="field__label">Contributors</div>
              {% endif %}
            {% endif %}
            {{ node.fields[f]|view }}
          {% endfor %}
        {% endif %}

    </header>
    </article>
</div>
