<?php

/**
 * @file
 * Item extra module.
 */

use Drupal\views\ViewExecutable;

/**
 * Implements hook_theme().
 */
function asu_item_extras_theme() {
  return [
    'file_video_with_caption' => [
      'template' => 'file-video-caption',
      'variables' => [
        'caption' => NULL,
        'files' => [],
        'poster' => NULL,
        'attributes' => NULL,
      ],
    ],
    'asu_item_extras_downloads_block' => [
      'template' => 'asu-item-extras-downloads-block',
      'variables' => [
        'asu_download_links' => NULL,
        'asu_download_restricted' => NULL,
        'asu_download_info' => NULL,
        'file_size' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_views_pre_render().
 *
 * Views doesn't respect our permissions module. We need to check each media
 * until we find one we can return.
 */
function asu_item_extras_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'video_media_evas') {
    // Unset everything we don't have permission for
    // OR after we found an accessible item.
    $found = FALSE;
    foreach ($view->result as $key => $value) {
      if (!$found && !empty($value->_entity) && $value->_entity->access('view')) {
        $found = TRUE;
      }
      else {
        unset($view->result[$key]);
      }
    }
  }
}

/**
 * Implements hook_views_data().
 */
function asu_item_extras_views_data() {
  $data['views']['table']['group'] = t('Content');
  $data['views']['table']['join'] = [
    // #global is a special flag which allows a table to appear all the time.
    '#global' => [],
  ];

  $data['views']['mime_url_field'] = [
    'title' => t('Mime URL'),
    'help' => t('Provides a related media file URL for a configured mime-type.'),
    'field' => [
      'id' => 'mime_url_field',
    ],
  ];
  return $data;
}

/**
 * Implements hook_preprocess_rest_oai_pmh_record().
 *
 * Taken from the deprecated islandora_rest_oaipmh module.
 * See https://github.com/Islandora/islandora_defaults/blob/3.x/modules/islandora_oaipmh/islandora_oaipmh.module
 */
function asu_item_extras_preprocess_rest_oai_pmh_record(&$variables) {
  $entity = $variables['entity'];
  if ($entity->hasField('field_linked_agent')) {
    foreach ($entity->get('field_linked_agent') as $linked_agent) {
      $creator_rels = [
        'relators:cre',
        'relators:art',
        'relators:aut',
        'relators:edc',
        'relators:pht',
        'relators:trl',
      ];
      $dc_field = in_array($linked_agent->rel_type, $creator_rels) ? 'dc:creator' : 'dc:contributor';
      $variables['elements'][$dc_field][] = $linked_agent->entity->label();
    }
  }
}

